/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.mysql.cj.Session;
import com.sun.mail.handlers.message_rfc822;
import com.toedter.calendar.JDayChooser;
import jakarta.mail.Authenticator;
import jakarta.mail.Message;
import jakarta.mail.MessagingException;
import jakarta.mail.PasswordAuthentication;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import jakarta.mail.search.SubjectTerm;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Date;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.Subject;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.metal.MetalIconFactory;
import javax.swing.table.DefaultTableModel;
import model.SanPhamMuaNhieu;
import model.TongDoanhThu;
import model.TongDoanhThuNgay;
import org.apache.xmlbeans.impl.soap.Text;
import org.ehcache.core.spi.store.Store;
import service.SanPhamMuaNhieuS;
import service.TongDoanhThuNgayS;
import service.TongDoanhThuService;

/**
 *
 * @author Asus
 */
public class ThongKe extends javax.swing.JPanel {

    private TongDoanhThuService tdts = new TongDoanhThuService();
    private TongDoanhThuNgayS tdtns = new TongDoanhThuNgayS();
    private ArrayList<TongDoanhThu> lstTDT = new ArrayList<>();
    private ArrayList<TongDoanhThuNgay> lstTDTN = new ArrayList<>();
    TongDoanhThuNgay tdt1n;
    private DefaultTableModel model;
    SanPhamMuaNhieuS spmn = new SanPhamMuaNhieuS();
    ArrayList<SanPhamMuaNhieu> lstSPMN = spmn.getAllSanPham();
    DefaultComboBoxModel dcm;

    public ThongKe() throws Exception {
        initComponents();
        model = (DefaultTableModel) tblDonHang.getModel();
        LoadDataToDonHang();
        THONGKEALL.setBackground(Color.red);
        THONGKENGAY.setBackground(Color.red);
        THONGKETHANG.setBackground(Color.red);
        THONGKENAM.setBackground(Color.red);
        LoadDataToDoanhThu();
        loadCbo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        THONGKEALL = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTHONGKEALL = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTHONGKEALLMoney = new javax.swing.JTextField();
        THONGKENGAY = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtThongKeNgay = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtMonayForDay = new javax.swing.JTextField();
        THONGKETHANG = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtThongKeThang = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtMoneyForMonth = new javax.swing.JTextField();
        THONGKENAM = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtThongKeNam = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMoneyForYear = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        loctheongay = new com.toedter.calendar.JDayChooser();
        loctheonam = new com.toedter.calendar.JYearChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnBaoCaoThongKe = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        cboThang = new javax.swing.JComboBox<>();

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        THONGKEALL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));

        jLabel1.setBackground(new java.awt.Color(204, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TỔNG DOANH THU");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Đơn hàng  : ");

        txtTHONGKEALL.setBackground(new java.awt.Color(255, 51, 51));
        txtTHONGKEALL.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTHONGKEALL.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tổng tiền  : ");

        txtTHONGKEALLMoney.setBackground(new java.awt.Color(255, 51, 51));
        txtTHONGKEALLMoney.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTHONGKEALLMoney.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout THONGKEALLLayout = new javax.swing.GroupLayout(THONGKEALL);
        THONGKEALL.setLayout(THONGKEALLLayout);
        THONGKEALLLayout.setHorizontalGroup(
            THONGKEALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKEALLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(THONGKEALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(THONGKEALLLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(txtTHONGKEALL, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(THONGKEALLLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(THONGKEALLLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTHONGKEALLMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        THONGKEALLLayout.setVerticalGroup(
            THONGKEALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKEALLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(72, 72, 72)
                .addGroup(THONGKEALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTHONGKEALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(THONGKEALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTHONGKEALLMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel3.add(THONGKEALL);

        THONGKENGAY.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));

        jLabel2.setBackground(new java.awt.Color(204, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DOANH THU NGÀY");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Đơn hàng  : ");

        txtThongKeNgay.setBackground(new java.awt.Color(255, 51, 51));
        txtThongKeNgay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtThongKeNgay.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tổng tiền  : ");

        txtMonayForDay.setBackground(new java.awt.Color(255, 51, 51));
        txtMonayForDay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtMonayForDay.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout THONGKENGAYLayout = new javax.swing.GroupLayout(THONGKENGAY);
        THONGKENGAY.setLayout(THONGKENGAYLayout);
        THONGKENGAYLayout.setHorizontalGroup(
            THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKENGAYLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(THONGKENGAYLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(THONGKENGAYLayout.createSequentialGroup()
                        .addGroup(THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(16, 16, 16)
                        .addGroup(THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMonayForDay)
                            .addComponent(txtThongKeNgay, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))))
                .addContainerGap())
        );
        THONGKENGAYLayout.setVerticalGroup(
            THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKENGAYLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(73, 73, 73)
                .addGroup(THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtThongKeNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(28, 28, 28)
                .addGroup(THONGKENGAYLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMonayForDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel3.add(THONGKENGAY);

        THONGKETHANG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));

        jLabel3.setBackground(new java.awt.Color(204, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DOANH THU THÁNG");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Đơn hàng  : ");

        txtThongKeThang.setBackground(new java.awt.Color(255, 51, 51));
        txtThongKeThang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtThongKeThang.setForeground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Tổng tiền  : ");

        txtMoneyForMonth.setBackground(new java.awt.Color(255, 51, 51));
        txtMoneyForMonth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtMoneyForMonth.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout THONGKETHANGLayout = new javax.swing.GroupLayout(THONGKETHANG);
        THONGKETHANG.setLayout(THONGKETHANGLayout);
        THONGKETHANGLayout.setHorizontalGroup(
            THONGKETHANGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKETHANGLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(THONGKETHANGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(THONGKETHANGLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtThongKeThang))
                    .addGroup(THONGKETHANGLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addGroup(THONGKETHANGLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMoneyForMonth)))
                .addContainerGap())
        );
        THONGKETHANGLayout.setVerticalGroup(
            THONGKETHANGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKETHANGLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(72, 72, 72)
                .addGroup(THONGKETHANGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtThongKeThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(THONGKETHANGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtMoneyForMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jPanel3.add(THONGKETHANG);

        THONGKENAM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));

        jLabel4.setBackground(new java.awt.Color(204, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DOANH THU NĂM");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Đơn hàng  : ");

        txtThongKeNam.setBackground(new java.awt.Color(255, 51, 51));
        txtThongKeNam.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtThongKeNam.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Tổng tiền  : ");

        txtMoneyForYear.setBackground(new java.awt.Color(255, 51, 51));
        txtMoneyForYear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtMoneyForYear.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout THONGKENAMLayout = new javax.swing.GroupLayout(THONGKENAM);
        THONGKENAM.setLayout(THONGKENAMLayout);
        THONGKENAMLayout.setHorizontalGroup(
            THONGKENAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKENAMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(THONGKENAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(THONGKENAMLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtThongKeNam))
                    .addGroup(THONGKENAMLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addGroup(THONGKENAMLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMoneyForYear)))
                .addContainerGap())
        );
        THONGKENAMLayout.setVerticalGroup(
            THONGKENAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(THONGKENAMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(75, 75, 75)
                .addGroup(THONGKENAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtThongKeNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(THONGKENAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtMoneyForYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        jPanel3.add(THONGKENAM);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("LỌC THEO NGÀY  : ");

        loctheongay.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                loctheongayAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        loctheongay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loctheongayFocusLost(evt);
            }
        });

        loctheonam.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                loctheonamAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        loctheonam.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loctheonamFocusLost(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("LỌC THEO THÁNG  : ");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("LỌC THEO NĂM :");

        btnBaoCaoThongKe.setBackground(new java.awt.Color(51, 0, 51));
        btnBaoCaoThongKe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBaoCaoThongKe.setForeground(new java.awt.Color(255, 255, 255));
        btnBaoCaoThongKe.setText("BÁO CÁO THỐNG KÊ ");
        btnBaoCaoThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaoCaoThongKeActionPerformed(evt);
            }
        });

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MÃ SẢN PHẨM", "TÊN SẢN PHẨM", "MÀU SẮC", "NHÀ SẢN XUẤT", "SỐ LẦN MUA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblDonHang);
        tblDonHang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboThang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboThangItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loctheongay, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 557, Short.MAX_VALUE)
                        .addComponent(btnBaoCaoThongKe)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loctheonam, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel14, jLabel15});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loctheonam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addGap(47, 47, 47)
                        .addComponent(btnBaoCaoThongKe))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11)
                            .addComponent(loctheongay, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBaoCaoThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaoCaoThongKeActionPerformed
        try {
            Object[] options = {"TẤT CẢ DOANH THU", "DOANH THU NGÀY", "DOANH THU THÁNG", "DOANH THU NĂM", "HỦY BÁO CÁO"};
            int chon = JOptionPane.showOptionDialog(
                    null,
                    "CHỌN MỤC DOANH THU MUỐN BÁO CÁO  : ",
                    "THÔNG BÁO !",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    options,
                    options[0]);
            switch (chon) {
                case 0 ->
                    doanhthutong();
                case 1 ->
                    doanhthungay();
                case 2 ->
                    doanhthuthang();
                case 3 ->
                    doanhthunam();
                case 4 ->
                    JOptionPane.showMessageDialog(this, "Hủy gửi báo cáo !");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnBaoCaoThongKeActionPerformed
    private void doanhthunam() {
        try {
            String email = "huymvph37060@fpt.edu.vn";
            String pass = "jxlf wjhl bwev uoyq";
            String toEmail = "huymvph37060@fpt.edu.vn";
            int nam = loctheonam.getYear();
            String subject = "BAO CAO THONG KE 4MENSHOP  " + nam + " YEAR";

            String mes = "TOTAL ORDER : " + txtThongKeNam.getText() + "\n" + "TOTAL PAYMENT : " + txtMoneyForYear.getText() + " VND";
            if (mes.trim().isEmpty()) {
                throw new IllegalArgumentException("Nội dung gửi đang trống !");
            }

            // Tạo một phương thức nhanh để gửi maill cho thống kê
            ThongKe thongKe = new ThongKe();

            //Gửi email không đồng bộ bằng cách sử dụng một chuỗi hoặc trình thực thi riêng biệt
            new Thread(() -> {
                String data = thongKe.sendMail(email, pass, subject, mes, toEmail);
                System.out.println(data);
                // Correct the variable type to String array
                String[] result = {data};
                // Compare with the first element of the array using equalsIgnoreCase
                if ("true".equalsIgnoreCase(result[0])) {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê hoàn tất !"));
                } else {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê thất bại !"));
                }
            }).start();
        } catch (Exception e) {
        }
    }

    private void doanhthuthang() {
        try {
            String email = "huymvph37060@fpt.edu.vn";
            String pass = "jxlf wjhl bwev uoyq";
            String toEmail = "huymvph37060@fpt.edu.vn";
            int thang = Integer.parseInt(cboThang.getSelectedItem().toString());
            String subject = "BAO CAO THONG KE 4MENSHOP  " + thang + " MONTH";

            String mes = "TOTAL ORDER : " + txtThongKeThang.getText() + "\n" + "TOTAL PAYMENT : " + txtMoneyForMonth.getText() + " VND";
            if (mes.trim().isEmpty()) {
                throw new IllegalArgumentException("Nội dung gửi đang trống !");
            }

            // Tạo một phương thức nhanh để gửi maill cho thống kê
            ThongKe thongKe = new ThongKe();

            //Gửi email không đồng bộ bằng cách sử dụng một chuỗi hoặc trình thực thi riêng biệt
            new Thread(() -> {
                String data = thongKe.sendMail(email, pass, subject, mes, toEmail);
                System.out.println(data);
                // Correct the variable type to String array
                String[] result = {data};
                // Compare with the first element of the array using equalsIgnoreCase
                if ("true".equalsIgnoreCase(result[0])) {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê hoàn tất !"));
                } else {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê thất bại !"));
                }
            }).start();
        } catch (Exception e) {
        }
    }

    private void doanhthungay() {
        try {
            String email = "huymvph37060@fpt.edu.vn";
            String pass = "jxlf wjhl bwev uoyq";
            String toEmail = "huymvph37060@fpt.edu.vn";
            int ngay = loctheongay.getDay();
            String subject = "BAO CAO THONG KE 4MENSHOP  " + ngay + " DAY";

            String mes = "TOTAL ORDER : " + txtThongKeNgay.getText() + "\n" + "TOTAL PAYMENT : " + txtMonayForDay.getText() + " VND";
            if (mes.trim().isEmpty()) {
                throw new IllegalArgumentException("Nội dung gửi đang trống !");
            }

            // Tạo một phương thức nhanh để gửi maill cho thống kê
            ThongKe thongKe = new ThongKe();

            //Gửi email không đồng bộ bằng cách sử dụng một chuỗi hoặc trình thực thi riêng biệt
            new Thread(() -> {
                String data = thongKe.sendMail(email, pass, subject, mes, toEmail);
                System.out.println(data);
                // Correct the variable type to String array
                String[] result = {data};
                // Compare with the first element of the array using equalsIgnoreCase
                if ("true".equalsIgnoreCase(result[0])) {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê hoàn tất !"));
                } else {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê thất bại !"));
                }
            }).start();
        } catch (Exception e) {
        }
    }

    private void doanhthutong() {
        try {
            String email = "huymvph37060@fpt.edu.vn";
            String pass = "jxlf wjhl bwev uoyq";
            String toEmail = "huymvph37060@fpt.edu.vn";
            String subject = "BAO CAO THONG KE 4MENSHOP";

            String mes = "TOTAL ORDER : " + txtTHONGKEALL.getText() + "\n" + "TOTAL PAYMENT : " + txtTHONGKEALLMoney.getText() + " VND";
            if (mes.trim().isEmpty()) {
                throw new IllegalArgumentException("Nội dung gửi đang trống !");
            }

            // Tạo một phương thức nhanh để gửi maill cho thống kê
            ThongKe thongKe = new ThongKe();

            //Gửi email không đồng bộ bằng cách sử dụng một chuỗi hoặc trình thực thi riêng biệt
            new Thread(() -> {
                String data = thongKe.sendMail(email, pass, subject, mes, toEmail);
                System.out.println(data);
                // Correct the variable type to String array
                String[] result = {data};
                // Compare with the first element of the array using equalsIgnoreCase
                if ("true".equalsIgnoreCase(result[0])) {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê hoàn tất !"));
                } else {
                    SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê thất bại !"));
                }
            }).start();
        } catch (Exception e) {
        }
    }

//        try {
//            String email = "huymvph37060@fpt.edu.vn";
//        String pass = "jxlf wjhl bwev uoyq";
//        String toEmail = "huymvph37060@fpt.edu.vn";
//        String subject = "BAO CAO THONG KE 4MENSHOP";
//
//        String mes = "TOTAL ORDER : " + txtTHONGKEALL.getText() + "\n" + "TOTAL PAYMENT : " + txtTHONGKEALLMoney.getText() + " VND";
//        if (mes.trim().isEmpty()) {
//            throw new IllegalArgumentException("Nội dung gửi đang trống !");
//        }
//
//        // Tạo một phương thức nhanh để gửi maill cho thống kê
//        ThongKe thongKe = new ThongKe();
//
//        //Gửi email không đồng bộ bằng cách sử dụng một chuỗi hoặc trình thực thi riêng biệt
//        new Thread(() -> {
//            String data = thongKe.sendMail(email, pass, subject, mes, toEmail);
//            System.out.println(data);
//            // Correct the variable type to String array
//            String[] result = {data};
//            // Compare with the first element of the array using equalsIgnoreCase
//            if ("true".equalsIgnoreCase(result[0])) {
//                SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê hoàn tất !"));
//            } else {
//                SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(this, "Báo cáo thống kê thất bại !"));
//            }
//        }).start();
//    }
//    catch (IllegalArgumentException e
//
//    
//        ) {
//            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//    }
//    catch (Exception ex
//
//    
//        ) {
//            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
//    }

    private void loctheongayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loctheongayFocusLost

        try {
            // Thực hiện các thao tác khởi tạo khác nếu cần

            // Lắng nghe sự kiện propertyChange
            loctheongay.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if ("day".equals(evt.getPropertyName())) {
                        // Sự kiện xảy ra khi người dùng chọn một ngày mới
                        int ngayDaChon = (int) evt.getNewValue();

                        try {
                            // Thực hiện xử lý với ngày đã chọn
                            tdt1n = tdtns.getDoanhThuNgay(ngayDaChon);
                            if (tdt1n != null) {
                                double tongthanhtoan = tdt1n.getTongDoanhThu();
                                //Chuyển sang kiểu number
                                NumberFormat nf = NumberFormat.getInstance();

                                txtThongKeNgay.setText(String.valueOf(tdt1n.getSoHoaDon()));
                                System.out.println("" + tdt1n.getSoHoaDon());
                                txtMonayForDay.setText(nf.format(tongthanhtoan));
                            }
                        } catch (Exception ex) {
                            // Xử lý các ngoại lệ
                            ex.printStackTrace();
                        }
                    }
                }
            });

            // Thực hiện các thao tác khởi tạo khác nếu cần
        } catch (Exception ex) {
            // Xử lý các ngoại lệ nếu có
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loctheongayFocusLost

    private void loctheongayAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_loctheongayAncestorAdded
        try {
            // Thực hiện các thao tác khởi tạo khác nếu cần

            // Lắng nghe sự kiện propertyChange
            loctheongay.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if ("day".equals(evt.getPropertyName())) {
                        // Sự kiện xảy ra khi người dùng chọn một ngày mới
                        int ngayDaChon = (int) evt.getNewValue();

                        try {
                            // Thực hiện xử lý với ngày đã chọn
                            tdt1n = tdtns.getDoanhThuNgay(ngayDaChon);
                            if (tdt1n != null) {
                                double tongthanhtoan = tdt1n.getTongDoanhThu();
                                //Chuyển sang kiểu Number
                                NumberFormat nf = NumberFormat.getInstance();

                                txtThongKeNgay.setText(String.valueOf(tdt1n.getSoHoaDon()));
                                System.out.println("" + tdt1n.getSoHoaDon());
                                txtMonayForDay.setText(nf.format(tongthanhtoan));
                            }
                        } catch (Exception ex) {
                            // Xử lý các ngoại lệ
                            ex.printStackTrace();
                        }
                    }
                }
            });

            // Thực hiện các thao tác khởi tạo khác nếu cần
        } catch (Exception ex) {
            // Xử lý các ngoại lệ nếu có
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loctheongayAncestorAdded
    public void loadCbo() {
        dcm = (DefaultComboBoxModel) cboThang.getModel();

        dcm.removeAllElements();
        dcm.addElement("--Chọn tháng--");
        dcm.addElement("1");
        dcm.addElement("2");
        dcm.addElement("3");
        dcm.addElement("4");
        dcm.addElement("5");
        dcm.addElement("6");
        dcm.addElement("7");
        dcm.addElement("8");
        dcm.addElement("9");
        dcm.addElement("10");
        dcm.addElement("11");
        dcm.addElement("12");

        cboThang.setModel(dcm);
    }
    private void loctheonamAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_loctheonamAncestorAdded
        try {
            // Thực hiện các thao tác khởi tạo khác nếu cần

            // Lắng nghe sự kiện propertyChange
            loctheonam.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if ("year".equals(evt.getPropertyName())) {
                        // Sự kiện xảy ra khi người dùng chọn một tháng mới
                        int namDaChon = (int) evt.getNewValue();
                        try {
                            // Thực hiện xử lý với ngày đã chọn
                            tdt1n = tdtns.getDoanhThuNam(namDaChon);
                            if (tdt1n != null) {
                                double tongthanhtoan = tdt1n.getTongDoanhThu();
                                // CHuyển sang kiểu Number
                                NumberFormat nf = NumberFormat.getInstance();

                                txtThongKeNam.setText(String.valueOf(tdt1n.getSoHoaDon()));
                                System.out.println("" + tdt1n.getSoHoaDon());
                                txtMoneyForYear.setText(nf.format(tongthanhtoan));
                            }
                        } catch (Exception ex) {
                            // Xử lý các ngoại lệ
                            ex.printStackTrace();
                        }
                    }
                }
            });
            // Thực hiện các thao tác khởi tạo khác nếu cần
        } catch (Exception ex) {
            // Xử lý các ngoại lệ nếu có
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loctheonamAncestorAdded

    private void loctheonamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loctheonamFocusLost
        try {
            // Thực hiện các thao tác khởi tạo khác nếu cần

            // Lắng nghe sự kiện propertyChange
            loctheonam.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if ("year".equals(evt.getPropertyName())) {
                        // Sự kiện xảy ra khi người dùng chọn một tháng mới
                        int namDaChon = (int) evt.getNewValue();
                        try {
                            // Thực hiện xử lý với ngày đã chọn
                            tdt1n = tdtns.getDoanhThuNam(namDaChon);
                            if (tdt1n != null) {
                                double tongthanhtoan = tdt1n.getTongDoanhThu();
                                // Chuyển sang kiểu Number
                                NumberFormat nf = NumberFormat.getInstance();

                                txtThongKeNam.setText(String.valueOf(tdt1n.getSoHoaDon()));
                                System.out.println("" + tdt1n.getSoHoaDon());
                                txtMoneyForYear.setText(nf.format(tongthanhtoan));
                            }
                        } catch (Exception ex) {
                            // Xử lý các ngoại lệ
                            ex.printStackTrace();
                        }
                    }
                }
            });
            // Thực hiện các thao tác khởi tạo khác nếu cần
        } catch (Exception ex) {
            // Xử lý các ngoại lệ nếu có
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loctheonamFocusLost

    private void cboThangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboThangItemStateChanged
        // TODO add your handling code here:
        int thang = cboThang.getSelectedIndex();
        if (cboThang.getSelectedIndex() == 0) {
            txtThongKeThang.setText("");
            txtMoneyForMonth.setText("");
            return;
        }
        if (cboThang.getSelectedIndex() == 1) {
            thang = 1;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 2) {
            thang = 2;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 3) {
            thang = 3;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 4) {
            thang = 4;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 5) {
            thang = 5;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 6) {
            thang = 6;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 7) {
            thang = 7;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 8) {
            thang = 8;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 9) {
            thang = 9;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 10) {
            thang = 10;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 11) {
            thang = 11;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
        if (cboThang.getSelectedIndex() == 12) {
            thang = 12;
            try {
                // Thực hiện xử lý với ngày đã chọn
                tdt1n = tdtns.getDoanhThuThang(thang);
                if (tdt1n != null) {
                    double tongthanhtoan = tdt1n.getTongDoanhThu();
                    // Chuyển sang kiểu Number
                    NumberFormat nf = NumberFormat.getInstance();

                    txtThongKeThang.setText(String.valueOf(tdt1n.getSoHoaDon()));
                    System.out.println("" + tdt1n.getSoHoaDon());
                    txtMoneyForMonth.setText(nf.format(tongthanhtoan));
                }
            } catch (Exception ex) {
                // Xử lý các ngoại lệ
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_cboThangItemStateChanged

    public String sendMail(String email, String pass, String subject, String text, String toEmail) {
        String msg;
        final String user = email;
        final String password = pass;
        Properties props = new Properties();
        props.put("mail.smtp.auth", true);
        props.put("mail.smtp.starttls.enable", true);
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.setProperty("mail.smtp.ssl.trust", "smtp.gmail.com");
        jakarta.mail.Session session = jakarta.mail.Session.getInstance(props, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(user, password);
            }
        });
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(email));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject(subject);
            message.setText(text);
            Transport.send(message);
            msg = "true";
        } catch (MessagingException e) {
            e.printStackTrace();
            msg = "Error sending email: " + e.getMessage();
        }
        return msg;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel THONGKEALL;
    private javax.swing.JPanel THONGKENAM;
    private javax.swing.JPanel THONGKENGAY;
    private javax.swing.JPanel THONGKETHANG;
    private javax.swing.JButton btnBaoCaoThongKe;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser loctheonam;
    private com.toedter.calendar.JDayChooser loctheongay;
    private javax.swing.JTable tblDonHang;
    private javax.swing.JTextField txtMonayForDay;
    private javax.swing.JTextField txtMoneyForMonth;
    private javax.swing.JTextField txtMoneyForYear;
    private javax.swing.JTextField txtTHONGKEALL;
    private javax.swing.JTextField txtTHONGKEALLMoney;
    private javax.swing.JTextField txtThongKeNam;
    private javax.swing.JTextField txtThongKeNgay;
    private javax.swing.JTextField txtThongKeThang;
    // End of variables declaration//GEN-END:variables

    private void LoadDataToDoanhThu() throws Exception {
        lstTDT = tdts.getAllDoanhThu();
        for (TongDoanhThu tongDoanhThu : lstTDT) {
            double tongthanhtoan = tongDoanhThu.getTongDoanhThu();
            //Chuyển đổi sang kiểu Number
            NumberFormat nf = NumberFormat.getInstance();

            txtTHONGKEALL.setText(String.valueOf(tongDoanhThu.getTongDonHang()));
            txtTHONGKEALLMoney.setText(nf.format(tongthanhtoan));
        }
    }

    private void LoadDataToDonHang() throws Exception {
        model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        for (SanPhamMuaNhieu donh : spmn.getAllSanPham()) {
            Object[] rowData = {
                donh.getMasp(),
                donh.getTensp(),
                donh.getMausac(),
                donh.getNhasanxuat(),
                donh.getSolanmua()
            };
            model.addRow(rowData);
        }
//        String[] col = {
//            "MÃ SẢN PHẨM ", "TÊN SẢN PHẨM ", "MÀU SẮC", "NHÀ SẢN SUẤT", "SỐ LẦN MUA"
//        };
//        model.setColumnIdentifiers(col);
    }
}
